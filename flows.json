[
    {
        "id": "e0a536c8576cd58a",
        "type": "tab",
        "label": "Camera to Nextcloud file storage",
        "disabled": false,
        "info": ""
    },
    {
        "id": "162e8166.ead83f",
        "type": "tab",
        "label": "Kafka producer",
        "disabled": false,
        "info": ""
    },
    {
        "id": "4479afc3.3f2a8",
        "type": "tab",
        "label": "Kafka consumer",
        "disabled": false,
        "info": ""
    },
    {
        "id": "5ade6d3d.eb7ac4",
        "type": "tab",
        "label": "Kafka test flow",
        "disabled": false,
        "info": ""
    },
    {
        "id": "e395902f.9ee6d",
        "type": "subflow",
        "name": "Tokenizer",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 100,
                "y": 180,
                "wires": [
                    {
                        "id": "2040616f.7ab13e"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1260,
                "y": 540,
                "wires": [
                    {
                        "id": "5d131228.821cec",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "e13733f9.4ae6",
        "type": "subflow",
        "name": "WebDAV downloader",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 100,
                "y": 40,
                "wires": [
                    {
                        "id": "1a53a9ab.24f076"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 520,
                "y": 180,
                "wires": [
                    {
                        "id": "e3681d57.55e8b",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "2955a852.6eb4d8",
        "type": "kafka-broker",
        "name": "",
        "hosts": "34.125.96.86:9094",
        "selfsign": false,
        "usetls": false,
        "cacert": "",
        "clientcert": "",
        "privatekey": "",
        "passphrase": ""
    },
    {
        "id": "64678394.04fd2c",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "2717f9119221710c",
        "type": "camerapi-takephoto",
        "z": "e0a536c8576cd58a",
        "filemode": "0",
        "filename": "",
        "filedefpath": "1",
        "filepath": "",
        "fileformat": "jpeg",
        "resolution": "5",
        "rotation": "0",
        "fliph": "0",
        "flipv": "0",
        "brightness": "50",
        "contrast": "0",
        "sharpness": "0",
        "quality": "80",
        "imageeffect": "none",
        "exposuremode": "auto",
        "iso": "0",
        "agcwait": "1.0",
        "led": "0",
        "awb": "auto",
        "name": "",
        "x": 600,
        "y": 400,
        "wires": [
            [
                "26931d12.648da2",
                "2fc0d2fa.a664be"
            ]
        ]
    },
    {
        "id": "d4afc5e618698070",
        "type": "inject",
        "z": "e0a536c8576cd58a",
        "name": "Upload at intervals",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 510,
        "y": 280,
        "wires": [
            [
                "7cf40b06.ed12b4",
                "ff93a6cf.8d46a8"
            ]
        ]
    },
    {
        "id": "26931d12.648da2",
        "type": "http request",
        "z": "e0a536c8576cd58a",
        "name": "",
        "method": "PUT",
        "ret": "obj",
        "paytoqs": "body",
        "url": "https://flask.elsdan.com/api/file",
        "tls": "",
        "persist": true,
        "proxy": "",
        "authType": "",
        "x": 670,
        "y": 480,
        "wires": [
            [
                "56625ee.2e29fa"
            ]
        ]
    },
    {
        "id": "56625ee.2e29fa",
        "type": "debug",
        "z": "e0a536c8576cd58a",
        "name": "Response time",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "$millis()",
        "targetType": "jsonata",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 480,
        "wires": []
    },
    {
        "id": "156ca22e.32aaae",
        "type": "inject",
        "z": "162e8166.ead83f",
        "name": "Poll sensor readings",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 240,
        "wires": [
            [
                "34a0e19b.0027ee",
                "2992be64.fbe802",
                "ecd65b3f.bd5ca8"
            ]
        ]
    },
    {
        "id": "ecd65b3f.bd5ca8",
        "type": "function",
        "z": "162e8166.ead83f",
        "name": "Sensor 3 - Humidity",
        "func": "msg.payload = {\n    \"sensor_id\": 3,\n    \"data\": Math.random() * 90,\n    \"timestamp\": new Date()\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 160,
        "wires": [
            [
                "9404b03b.459b"
            ]
        ]
    },
    {
        "id": "34a0e19b.0027ee",
        "type": "function",
        "z": "162e8166.ead83f",
        "name": "Sensor 2 - Temperature",
        "func": "msg.payload = {\n    \"sensor_id\": 2,\n    \"data\": Math.random() * 30,\n    \"timestamp\": new Date()\n}\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 340,
        "wires": [
            [
                "f22e71af.bbe84"
            ]
        ]
    },
    {
        "id": "f1d5469a.c93b68",
        "type": "kafka-producer",
        "z": "162e8166.ead83f",
        "name": "",
        "broker": "2955a852.6eb4d8",
        "topic": "cpt_retreat_climate",
        "requireAcks": 1,
        "ackTimeoutMs": 100,
        "attributes": "2",
        "x": 1080,
        "y": 260,
        "wires": []
    },
    {
        "id": "f60a33a5.17a34",
        "type": "kafka-consumer",
        "z": "4479afc3.3f2a8",
        "name": "",
        "broker": "2955a852.6eb4d8",
        "outOfRangeOffset": "earliest",
        "fromOffset": "latest",
        "topic": "cpt_retreat_climate",
        "groupid": "",
        "x": 160,
        "y": 280,
        "wires": [
            [
                "936c5726.317d68",
                "21c38863.54ce18"
            ]
        ]
    },
    {
        "id": "936c5726.317d68",
        "type": "json",
        "z": "4479afc3.3f2a8",
        "name": "",
        "property": "payload.value",
        "action": "obj",
        "pretty": true,
        "x": 390,
        "y": 280,
        "wires": [
            [
                "f6246d87.7a9b8"
            ]
        ]
    },
    {
        "id": "9404b03b.459b",
        "type": "json",
        "z": "162e8166.ead83f",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 730,
        "y": 160,
        "wires": [
            [
                "f1d5469a.c93b68",
                "7472125.25237ec"
            ]
        ]
    },
    {
        "id": "2040616f.7ab13e",
        "type": "switch",
        "z": "e395902f.9ee6d",
        "name": "Check access_token exists",
        "property": "access_token",
        "propertyType": "global",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 180,
        "y": 280,
        "wires": [
            [
                "1816e25b.e3000e"
            ],
            [
                "10990d5c.1f3f23"
            ]
        ]
    },
    {
        "id": "1816e25b.e3000e",
        "type": "http request",
        "z": "e395902f.9ee6d",
        "name": "/login request",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://flask.elsdan.com/login",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "basic",
        "x": 780,
        "y": 120,
        "wires": [
            [
                "1f7136cc.e9cbc9"
            ]
        ]
    },
    {
        "id": "1f7136cc.e9cbc9",
        "type": "change",
        "z": "e395902f.9ee6d",
        "name": "Set access & refresh token",
        "rules": [
            {
                "t": "set",
                "p": "access_token",
                "pt": "global",
                "to": "payload.access_token",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "refresh_token",
                "pt": "global",
                "to": "payload.refresh_token",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "expires_at",
                "pt": "global",
                "to": "payload.expires_at",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 160,
        "wires": [
            [
                "5d131228.821cec"
            ]
        ]
    },
    {
        "id": "2c1bb2a4.e77fee",
        "type": "comment",
        "z": "e395902f.9ee6d",
        "name": "Request tokens if no access_token",
        "info": "",
        "x": 840,
        "y": 80,
        "wires": []
    },
    {
        "id": "91150d45.6e0c1",
        "type": "comment",
        "z": "e395902f.9ee6d",
        "name": "If token exists",
        "info": "",
        "x": 410,
        "y": 360,
        "wires": []
    },
    {
        "id": "10990d5c.1f3f23",
        "type": "switch",
        "z": "e395902f.9ee6d",
        "name": "Is access_token about to expire",
        "property": "expires_at",
        "propertyType": "global",
        "rules": [
            {
                "t": "lte",
                "v": "$millis() / 1000 - 3600",
                "vt": "jsonata"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 470,
        "y": 320,
        "wires": [
            [
                "1bfb999d.642da6"
            ],
            [
                "5d131228.821cec"
            ]
        ]
    },
    {
        "id": "c522ea89.9831b8",
        "type": "http request",
        "z": "e395902f.9ee6d",
        "name": "/refresh request",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://flask.elsdan.com/refresh",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 820,
        "y": 300,
        "wires": [
            [
                "f608ce51.ad9b8"
            ]
        ]
    },
    {
        "id": "1bfb999d.642da6",
        "type": "function",
        "z": "e395902f.9ee6d",
        "name": "Put refresh_token in header",
        "func": "let refresh_token = global.get(\"refresh_token\");\nmsg.headers = {\n    \"Authorization\": `Bearer ${refresh_token}`\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 260,
        "wires": [
            [
                "c522ea89.9831b8"
            ]
        ]
    },
    {
        "id": "f608ce51.ad9b8",
        "type": "change",
        "z": "e395902f.9ee6d",
        "name": "Set access token",
        "rules": [
            {
                "t": "set",
                "p": "access_token",
                "pt": "global",
                "to": "payload.access_token",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 340,
        "wires": [
            [
                "5d131228.821cec"
            ]
        ]
    },
    {
        "id": "ec6fbc03.4cca5",
        "type": "comment",
        "z": "e395902f.9ee6d",
        "name": "True",
        "info": "",
        "x": 630,
        "y": 260,
        "wires": []
    },
    {
        "id": "a2931172.46494",
        "type": "comment",
        "z": "e395902f.9ee6d",
        "name": "False",
        "info": "",
        "x": 630,
        "y": 380,
        "wires": []
    },
    {
        "id": "5d131228.821cec",
        "type": "function",
        "z": "e395902f.9ee6d",
        "name": "Put access_token in header",
        "func": "let access_token = global.get(\"access_token\");\nmsg.headers = {\n    \"Authorization\": `Bearer ${access_token}`\n};\nmsg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "a0ea88bf.34fde8",
        "type": "debug",
        "z": "e395902f.9ee6d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "headers",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1470,
        "y": 240,
        "wires": []
    },
    {
        "id": "7cf40b06.ed12b4",
        "type": "subflow:e395902f.9ee6d",
        "z": "e0a536c8576cd58a",
        "name": "",
        "env": [],
        "x": 510,
        "y": 320,
        "wires": [
            [
                "67a4e27e.0e602c"
            ]
        ]
    },
    {
        "id": "67a4e27e.0e602c",
        "type": "function",
        "z": "e0a536c8576cd58a",
        "name": "Set headers",
        "func": "msg.headers[\"sensor-id\"] = 1;\nmsg.headers[\"path\"] = \"all\";\nmsg.headers[\"extension\"] = \"jpg\";\nmsg.headers[\"tag-id\"] = 4;\nmsg.headers[\"user\"] = \"chriskim036\";\nmsg.headers[\"password\"] = \"YOUR_PASS\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 360,
        "wires": [
            [
                "2717f9119221710c"
            ]
        ]
    },
    {
        "id": "ff93a6cf.8d46a8",
        "type": "debug",
        "z": "e0a536c8576cd58a",
        "name": "Prompt time",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 280,
        "wires": []
    },
    {
        "id": "2fc0d2fa.a664be",
        "type": "debug",
        "z": "e0a536c8576cd58a",
        "name": "Request time",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "$millis()",
        "targetType": "jsonata",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 400,
        "wires": []
    },
    {
        "id": "c2116b5a.15a678",
        "type": "comment",
        "z": "e0a536c8576cd58a",
        "name": "Set sensor-id, path, extension, tag-id here",
        "info": "",
        "x": 280,
        "y": 360,
        "wires": []
    },
    {
        "id": "2992be64.fbe802",
        "type": "debug",
        "z": "162e8166.ead83f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 260,
        "y": 380,
        "wires": []
    },
    {
        "id": "21c38863.54ce18",
        "type": "debug",
        "z": "4479afc3.3f2a8",
        "name": "Consumer receive time",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "$millis()",
        "targetType": "jsonata",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 120,
        "wires": []
    },
    {
        "id": "f6246d87.7a9b8",
        "type": "function",
        "z": "4479afc3.3f2a8",
        "name": "Check for conditions (Customizable)",
        "func": "if (msg.payload.value[\"sensor_id\"] == 2\n    && msg.payload.value[\"data\"] > 25){\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 280,
        "wires": [
            [
                "2b9ae187.e40efe"
            ]
        ]
    },
    {
        "id": "53dfc20b.8b937c",
        "type": "function",
        "z": "4479afc3.3f2a8",
        "name": "Give parameters for file query (e.g. start_date, tag)",
        "func": "// Give Date 7 days ago formatted to string (UTC), eliminating millisecs\nlet date = new Date();\ndate.setDate(date.getDay() - 7);\nlet isoDate = date.toISOString();\nlet formatDate = isoDate.slice(0, isoDate.indexOf(\".\"));\n\n// Specify body content as a form\nmsg.headers[\"Content-Type\"] = \"application/json\";\n\n// Parameters for file query\nmsg.payload = {\n    \"tag_id\": 4,\n    \"sensor_id\": 3\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 360,
        "wires": [
            [
                "656c0504.b1391c"
            ]
        ]
    },
    {
        "id": "2b9ae187.e40efe",
        "type": "subflow:e395902f.9ee6d",
        "z": "4479afc3.3f2a8",
        "name": "",
        "env": [],
        "x": 600,
        "y": 320,
        "wires": [
            [
                "53dfc20b.8b937c"
            ]
        ]
    },
    {
        "id": "656c0504.b1391c",
        "type": "http request",
        "z": "4479afc3.3f2a8",
        "name": "Fetch file details meeting parameters",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "body",
        "url": "https://flask.elsdan.com/api/filedetail",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 770,
        "y": 400,
        "wires": [
            [
                "50547da9.2bbb24",
                "d7cf680b.fa4e68"
            ]
        ]
    },
    {
        "id": "50547da9.2bbb24",
        "type": "split",
        "z": "4479afc3.3f2a8",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 710,
        "y": 440,
        "wires": [
            [
                "c1138022.71883"
            ]
        ]
    },
    {
        "id": "e3681d57.55e8b",
        "type": "http request",
        "z": "e13733f9.4ae6",
        "name": "WebDAV request",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": true,
        "proxy": "",
        "authType": "basic",
        "x": 290,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "8a3fe00f.0e5c8",
        "type": "debug",
        "z": "4479afc3.3f2a8",
        "name": "File to disk time",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "$millis()",
        "targetType": "jsonata",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 520,
        "wires": []
    },
    {
        "id": "9c09afcd.49658",
        "type": "inject",
        "z": "4479afc3.3f2a8",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 380,
        "y": 400,
        "wires": [
            [
                "2b9ae187.e40efe"
            ]
        ]
    },
    {
        "id": "d7cf680b.fa4e68",
        "type": "debug",
        "z": "4479afc3.3f2a8",
        "name": "File details receive time",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "$millis()",
        "targetType": "jsonata",
        "statusVal": "",
        "statusType": "auto",
        "x": 1150,
        "y": 400,
        "wires": []
    },
    {
        "id": "1a53a9ab.24f076",
        "type": "function",
        "z": "e13733f9.4ae6",
        "name": "Set URL and filename",
        "func": "let path = msg.payload[\"path\"];\nlet filepath = path.slice(path.indexOf(\"/\") + 1);\nlet user = \"chriskim036\";\nmsg.url = \"https://nextcloud.elsdan.com/remote.php/dav/files/\" +\n            user + \"/\" + filepath;\nmsg.filename = \"~/Pictures/\" + msg.payload[\"file_name\"];\nmsg.payload = null;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 100,
        "wires": [
            [
                "e3681d57.55e8b"
            ]
        ]
    },
    {
        "id": "c1138022.71883",
        "type": "subflow:e13733f9.4ae6",
        "z": "4479afc3.3f2a8",
        "name": "",
        "env": [],
        "x": 800,
        "y": 480,
        "wires": [
            [
                "9736ee02.69529",
                "c5f896dd.fece78"
            ]
        ]
    },
    {
        "id": "9736ee02.69529",
        "type": "file",
        "z": "4479afc3.3f2a8",
        "name": "",
        "filename": "",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 790,
        "y": 520,
        "wires": [
            [
                "8a3fe00f.0e5c8"
            ]
        ]
    },
    {
        "id": "f22e71af.bbe84",
        "type": "json",
        "z": "162e8166.ead83f",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 730,
        "y": 340,
        "wires": [
            [
                "c26aefed.c9c02",
                "f1d5469a.c93b68"
            ]
        ]
    },
    {
        "id": "7472125.25237ec",
        "type": "file",
        "z": "162e8166.ead83f",
        "name": "Write to sensor_3.json",
        "filename": "~/data_files/sensor_3.json",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 980,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "c26aefed.c9c02",
        "type": "file",
        "z": "162e8166.ead83f",
        "name": "Write to sensor_2.json",
        "filename": "~/data_files/sensor_2.json",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 980,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "8d0df79d.cbb218",
        "type": "inject",
        "z": "162e8166.ead83f",
        "name": "Upload data files every day for long-term store",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "00 00 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 280,
        "y": 560,
        "wires": [
            [
                "63b66a6f.068584"
            ]
        ]
    },
    {
        "id": "63b66a6f.068584",
        "type": "subflow:e395902f.9ee6d",
        "z": "162e8166.ead83f",
        "name": "",
        "env": [],
        "x": 380,
        "y": 620,
        "wires": [
            [
                "e8a98176.501c3",
                "50bbedb0.9e8aa4"
            ]
        ]
    },
    {
        "id": "e8a98176.501c3",
        "type": "function",
        "z": "162e8166.ead83f",
        "name": "Set headers",
        "func": "msg.headers[\"sensor-id\"] = 3;\nmsg.headers[\"path\"] = \"all\";\nmsg.headers[\"extension\"] = \"json\";\nmsg.headers[\"tag-id\"] = 4;\nmsg.headers[\"user\"] = \"chriskim036\";\nmsg.headers[\"password\"] = \"YOUR_PASS\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 620,
        "wires": [
            [
                "61cb2784.3ecd58"
            ]
        ]
    },
    {
        "id": "eeff4acb.d2c978",
        "type": "comment",
        "z": "162e8166.ead83f",
        "name": "Set sensor-id, path, extension, tag-id here",
        "info": "",
        "x": 660,
        "y": 500,
        "wires": []
    },
    {
        "id": "50bbedb0.9e8aa4",
        "type": "function",
        "z": "162e8166.ead83f",
        "name": "Set headers",
        "func": "msg.headers[\"sensor-id\"] = 2;\nmsg.headers[\"path\"] = \"all\";\nmsg.headers[\"extension\"] = \"json\";\nmsg.headers[\"tag-id\"] = 4;\nmsg.headers[\"user\"] = \"chriskim036\";\nmsg.headers[\"password\"] = \"YOUR_PASS\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 760,
        "wires": [
            [
                "69bc0cc4.192864"
            ]
        ]
    },
    {
        "id": "61cb2784.3ecd58",
        "type": "file in",
        "z": "162e8166.ead83f",
        "name": "",
        "filename": "~/data_files/sensor_3.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 650,
        "y": 660,
        "wires": [
            [
                "ed8e185a.c0de28"
            ]
        ]
    },
    {
        "id": "69bc0cc4.192864",
        "type": "file in",
        "z": "162e8166.ead83f",
        "name": "",
        "filename": "~/data_files/sensor_2.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 650,
        "y": 800,
        "wires": [
            [
                "ed8e185a.c0de28"
            ]
        ]
    },
    {
        "id": "ed8e185a.c0de28",
        "type": "http request",
        "z": "162e8166.ead83f",
        "name": "",
        "method": "PUT",
        "ret": "obj",
        "paytoqs": "body",
        "url": "https://flask.elsdan.com/api/file",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 870,
        "y": 880,
        "wires": [
            [
                "32e25d42.81f892"
            ]
        ]
    },
    {
        "id": "32e25d42.81f892",
        "type": "debug",
        "z": "162e8166.ead83f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 820,
        "wires": []
    },
    {
        "id": "baec9744.584da8",
        "type": "catch",
        "z": "e0a536c8576cd58a",
        "name": "Catch upload error",
        "scope": [
            "26931d12.648da2"
        ],
        "uncaught": false,
        "x": 390,
        "y": 480,
        "wires": [
            [
                "26931d12.648da2"
            ]
        ]
    },
    {
        "id": "655304d5.34673c",
        "type": "comment",
        "z": "e395902f.9ee6d",
        "name": "If token doesn't exist",
        "info": "",
        "x": 440,
        "y": 160,
        "wires": []
    },
    {
        "id": "fc89fe71.98712",
        "type": "kafka-producer",
        "z": "5ade6d3d.eb7ac4",
        "name": "",
        "broker": "2955a852.6eb4d8",
        "topic": "cpt_retreat_climate",
        "requireAcks": 1,
        "ackTimeoutMs": 100,
        "attributes": 0,
        "x": 540,
        "y": 320,
        "wires": []
    },
    {
        "id": "3fccfebc.71ad42",
        "type": "kafka-consumer",
        "z": "5ade6d3d.eb7ac4",
        "name": "",
        "broker": "2955a852.6eb4d8",
        "outOfRangeOffset": "earliest",
        "fromOffset": "latest",
        "topic": "test_topic",
        "groupid": "",
        "x": 380,
        "y": 520,
        "wires": [
            [
                "4ed072a6.4f3c3c",
                "2f1c9ff9.fc69e"
            ]
        ]
    },
    {
        "id": "4bf3522.b2cc2ac",
        "type": "json",
        "z": "5ade6d3d.eb7ac4",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 430,
        "y": 600,
        "wires": [
            [
                "5b973bd.7302cc4"
            ]
        ]
    },
    {
        "id": "6d4f91dd.723a2",
        "type": "json",
        "z": "5ade6d3d.eb7ac4",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 470,
        "y": 280,
        "wires": [
            [
                "fc89fe71.98712",
                "556d2c3b.8bfa64"
            ]
        ]
    },
    {
        "id": "2a88785a.dc37a8",
        "type": "function",
        "z": "5ade6d3d.eb7ac4",
        "name": "",
        "func": "// msg.payload = {\n//     \"value\": \"ABCDEFGHIJ\".repeat(1000)};\n// msg.payload = null;\n\nmsg.payload = {\n    \"sensor_id\": 2,\n    \"data\": 27\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 240,
        "wires": [
            [
                "6d4f91dd.723a2",
                "4c7610cb.b381c"
            ]
        ]
    },
    {
        "id": "ad5c719c.97506",
        "type": "inject",
        "z": "5ade6d3d.eb7ac4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 410,
        "y": 200,
        "wires": [
            [
                "2a88785a.dc37a8"
            ]
        ]
    },
    {
        "id": "4ed072a6.4f3c3c",
        "type": "function",
        "z": "5ade6d3d.eb7ac4",
        "name": "",
        "func": "msg.payload = msg.payload.value;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 560,
        "wires": [
            [
                "4bf3522.b2cc2ac"
            ]
        ]
    },
    {
        "id": "556d2c3b.8bfa64",
        "type": "debug",
        "z": "5ade6d3d.eb7ac4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "$millis()",
        "targetType": "jsonata",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 280,
        "wires": []
    },
    {
        "id": "5b973bd.7302cc4",
        "type": "debug",
        "z": "5ade6d3d.eb7ac4",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "$millis()",
        "targetType": "jsonata",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 520,
        "wires": []
    },
    {
        "id": "4c7610cb.b381c",
        "type": "debug",
        "z": "5ade6d3d.eb7ac4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "$millis()",
        "targetType": "jsonata",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 220,
        "wires": []
    },
    {
        "id": "2f1c9ff9.fc69e",
        "type": "debug",
        "z": "5ade6d3d.eb7ac4",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "$millis()",
        "targetType": "jsonata",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 460,
        "wires": []
    },
    {
        "id": "c5f896dd.fece78",
        "type": "debug",
        "z": "4479afc3.3f2a8",
        "name": "Download time",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "$millis()",
        "targetType": "jsonata",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 480,
        "wires": []
    }
]
